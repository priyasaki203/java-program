import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class Calc extends JFrame implements ActionListener {
    private JTextField display;
    private String operator;
    private double firstOperand;

    public Calc() {
        setTitle("Calculator");
        setSize(300, 400);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        display = new JTextField();
        display.setEditable(false);
        add(display, BorderLayout.NORTH);

        JPanel panel = new JPanel();
        panel.setLayout(new GridLayout(4, 4));

        String[] buttons = {
            "7", "8", "9", "/",
            "4", "5", "6", "*",
            "1", "2", "3", "-",
            "0", "C", "=", "+"
        };

        for (String text : buttons) {
            JButton button = new JButton(text);
            button.addActionListener(this);
            if (text.equals("=")) {
                button.setBackground(Color.BLUE);
                button.setForeground(Color.WHITE);
            }
            panel.add(button);
        }

        add(panel, BorderLayout.CENTER);
    }

    public void actionPerformed(ActionEvent e) {
        String command = e.getActionCommand();
        if ("C".equals(command)) {
            display.setText("");
            operator = null; // Reset the operator
        } else if ("=".equals(command)) {
            double secondOperand;
            try {
                secondOperand = Double.parseDouble(display.getText());
                switch (operator) {
                    case "+" -> display.setText(String.valueOf(firstOperand + secondOperand));
                    case "-" -> display.setText(String.valueOf(firstOperand - secondOperand));
                    case "*" -> display.setText(String.valueOf(firstOperand * secondOperand));
                    case "/" -> {
                        if (secondOperand == 0) {
                            display.setText("Error");
                        } else {
                            display.setText(String.valueOf(firstOperand / secondOperand));
                        }
                    }
                }
            } catch (NumberFormatException ex) {
                display.setText("Error");
            }
            operator = null;
        } else {
            if ("0123456789".contains(command)) {
                display.setText(display.getText() + command);
            } else {
                try {
                    firstOperand = Double.parseDouble(display.getText());
                    operator = command;
                    display.setText("");
                } catch (NumberFormatException ex) {
                    display.setText("Error");
                }
            }
        }
    }

    public static void main(String[] args)
     {
        SwingUtilities.invokeLater(() -> {
            Calc calcu = new Calc();
            calcu.setVisible(true);
        });
    }
}
